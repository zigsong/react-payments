{"version":3,"sources":["assets/backbutton.svg","components/PageHost/style.js","components/PageHost/index.js","constants/constants.js","assets/secure-ellipse.svg","styles/palette.js","components/shared/Card/style.js","components/shared/Card/index.js","components/units/CardAddButton/style.js","components/units/CardAddButton/index.js","mockData.js","components/pages/CardList/style.js","components/pages/CardList/index.js","components/shared/Button/style.js","components/shared/Button/index.js","components/shared/RegisterInputWrapper/style.js","components/shared/RegisterInputWrapper/index.js","components/units/CardNumbersInput/style.js","components/units/CardNumbersInput/index.js","components/units/ExpirationDateInput/style.js","components/units/ExpirationDateInput/index.js","components/units/OwnerNameInput/style.js","components/units/OwnerNameInput/index.js","components/units/VirtualKeyboard/style.js","components/units/VirtualKeyboard/index.js","utils/utils.js","assets/cvc-help.svg","assets/cvc_guide.png","components/units/SecureCodeInput/style.js","components/units/SecureCodeInput/index.js","assets/secure-ellipse-cyan.svg","components/units/CardPasswordInput/style.js","components/units/CardPasswordInput/index.js","components/units/CardRegisterForm/style.js","components/units/CardRegisterForm/index.js","components/units/CardSelector/style.js","components/units/CardColorOption/style.js","components/units/CardColorOption/index.js","components/units/CardSelector/index.js","components/pages/CardRegister/style.js","components/pages/CardRegister/index.js","components/pages/CardCompletion/style.js","components/pages/CardCompletion/index.js","styles/global.js","App.js","reportWebVitals.js","index.js"],"names":["Root","styled","main","NavigationBar","nav","title","NavigationTitle","span","PageHost","props","navigationTitle","hasBackButton","children","src","backButtonSvg","alt","INPUT_TYPE","type","label","width","FRAGMENT_INDEX","DATE_TYPE","div","height","backgroundColor","size","CardName","PALETTE","Chip","CardNumbersWrapper","CardNumbersFragment","OwnerName","ExpirationDate","Card","cardNumbers","bankName","ownerName","expirationDate","FIRST","SECOND","THIRD","FOURTH","MONTH","YEAR","showSecureDigits","length","Array","from","_","idx","SecureEllipseImage","defaultProps","button","CardAddButton","dummyCards","key","color","bank","owner","numbers","alias","dummyBanks","id","name","section","CardWrapper","CardAlias","CardList","map","card","Button","text","formId","form","InputHeader","DefaultInputWrapper","fieldset","DefaultInput","input","Label","WordCount","FlexContainer","RegisterInputWrapper","currentNameLength","isOwnerName","wordCount","htmlFor","InputWrapper","NumberInput","PasswordInput","Divider","CardNumbersInput","setCardNumbers","firstInput","useRef","secondInput","thirdInput","fourthInput","inputRefs","handleChangeNumbers","event","index","Number","target","dataset","numberIdx","numberFragment","value","prevNumbers","moveFocusToNextFragment","focusOut","current","focus","blur","aria-label","min","max","data-number-idx","onChange","ref","required","Input","ExpirationDateInput","setExpirationDate","monthInput","yearInput","handleChangeDate","dateType","underTwoDigits","prevDate","isValidMonth","moveFocusToYearInput","isValidYear","overTwoDigits","placeholder","data-date-type","isValid","ErrorMessage","OwnerNameInput","setOwnerName","useState","isInputValid","setInputValid","currentValue","test","toUpperCase","Keypad","KeyboardPortal","el","document","getElementById","createPortal","VirtualKeyboard","setInputNumbers","originNumbers","keypadNumbers","setKeypadNumbers","onClickKeypad","number","inputNumbers","concat","arr","j","x","i","Math","floor","random","shuffle","keypads","num","className","data-number","onClick","useEffect","window","scrollTo","body","scrollHeight","slice","HelpMark","img","CVCImg","SecureCodeInput","secureCode","setSecureCode","isCVCGuideOpen","setCVCGuideOpen","isVirtualKeyboardOpened","setVirtualKeyboardOpened","isNaN","onFocus","helpSvg","onMouseOver","onMouseLeave","CVCGuideImg","PasswordMark","CardPasswordInput","cardPassword","setCardPassword","passwordMark","EllipseSvg","passwordIdx","prevPassword","data-password-idx","CardRegisterForm","CARD_NUMBERS","EXPIRATION_DATE","OWNER_NAME","SECURE_CODE","PASSWORD","onSubmitForm","onSubmit","slideup","keyframes","SelectorInner","Circle","BankName","CardColorOption","onClickOption","bankId","data-bank-id","CardSelector","setBankId","setSelectorOpened","handleSelectColor","CardRegister","setCardData","handleGoNext","isSelectorOpened","cardColor","setCardColor","isCardIdentified","Object","values","every","fragment","find","preventDefault","Title","h3","AliasInput","CardCompletion","cardData","GlobalStyle","createGlobalStyle","PAGES","LIST","content","backButton","REGISTER","COMPLETION","App","currentPage","setCurrentPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1d31512c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backbutton.750d95a9.svg\";","import styled from 'styled-components/macro';\n\nconst Root = styled.main`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  width: 375px;\n  height: 700px;\n`;\n\nconst NavigationBar = styled.nav`\n  display: ${({ title }) => (title ? 'flex' : 'none')}};\n  background-color: #ffffff;\n  position: sticky;\n  top: 0;\n  width: 100%;\n  padding: 22px 24px;\n  font-size: 16px;\n  z-index: 10;\n`;\n\nconst NavigationTitle = styled.span`\n  margin-left: 17px;\n`;\n\nexport { Root, NavigationBar, NavigationTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport backButtonSvg from '../../assets/backbutton.svg';\nimport * as Style from './style';\n\nconst PageHost = (props) => {\n  const { navigationTitle, hasBackButton, children } = props;\n\n  return (\n    <Style.Root>\n      <Style.NavigationBar title={navigationTitle}>\n        {hasBackButton && <img src={backButtonSvg} alt=\"back-button\" />}\n        <Style.NavigationTitle>{navigationTitle}</Style.NavigationTitle>\n      </Style.NavigationBar>\n      <section>{children}</section>\n    </Style.Root>\n  );\n};\n\nPageHost.propTypes = {\n  navigationTitle: PropTypes.string.isRequired,\n  hasBackButton: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default PageHost;\n","/* eslint-disable import/no-anonymous-default-export */\nexport const INPUT_TYPE = {\n  CARD_NUMBERS: {\n    type: 'cardNumbers',\n    label: '카드 번호',\n    width: '318px',\n  },\n  EXPIRATION_DATE: {\n    type: 'expirationDate',\n    label: '만료일',\n    width: '137px',\n  },\n  OWNER_NAME: {\n    type: 'ownerName',\n    label: '카드 소유자 이름(선택)',\n    width: '318px',\n  },\n  SECURE_CODE: {\n    type: 'secureCode',\n    label: '보안코드(CVC/CVV)',\n    width: '84px',\n  },\n  PASSWORD: {\n    type: 'password',\n    label: '카드 비밀번호',\n    width: '43px',\n  },\n};\n\nexport const FRAGMENT_INDEX = {\n  FIRST: 1,\n  SECOND: 2,\n  THIRD: 3,\n  FOURTH: 4,\n};\n\nexport const DATE_TYPE = {\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","export default __webpack_public_path__ + \"static/media/secure-ellipse.f30a0082.svg\";","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  POCO_RED: '#E24141',\n  JUN_BLUE: '#547CE4',\n  PARK_GREEN: '#73BC6D',\n  BRAN_PINK: '#DE59B9',\n  LOYD_MINT: '#04C09E',\n  DOBY_PINK: '#E76E9A',\n  COLLIN_ORANGE: '#F37D3B',\n  SUN_YELLOW: '#FBCD58',\n\n  DEFAULT_BLACK: '#383838',\n  BOLD_BLACK: '#575757',\n  DEFAULT_CYAN: '#04C09E',\n\n  ADD_CARD_GRAY: '#E5E5E5',\n  EMPTY_CARD_GRAY: '#D2D2D2',\n  CARD_CHIP: '#CBBA64',\n\n  INPUT_BG_GRAY: '#ECEBF1',\n  INPUT_LABEL_BLACK: '#525252',\n  INPUT_TEXT_GRAY: '#737373',\n\n  COLOR_SELECTOR_WHITE: '#FDFDFD',\n};\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.div`\n  position: relative;\n  width: ${({ width }) => width};\n  height: ${({ height }) => height};\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  border-radius: 5px;\n  box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.25);\n  font-size: ${({ size }) => (size === 'large' ? '20px' : '16px')};\n`;\n\nconst CardName = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 6%;\n  font-size: 0.625em;\n  color: ${PALETTE.DEFAULT_BLACK};\n`;\n\nconst Chip = styled.div`\n  position: absolute;\n  top: 35%;\n  left: 6%;\n  width: 18%;\n  height: 19%;\n  background-color: ${PALETTE.CARD_CHIP};\n  border-radius: 4px;\n`;\n\nconst CardNumbersWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  width: 100%;\n  text-align: center;\n  left: 50%;\n  bottom: 24%;\n  transform: translateX(-50%);\n`;\n\nconst CardNumbersFragment = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 16%;\n  font-size: 0.875em;\n  font-weight: 600;\n  color: ${PALETTE.DEFAULT_BLACK};\n  letter-spacing: 2px;\n  opacity: 80%;\n\n  &:not(:last-child) {\n    margin-right: 9px;\n  }\n\n  & img {\n    &:not(:last-child) {\n      margin-right: 4px;\n    }\n  }\n`;\n\nconst OwnerName = styled.div`\n  position: absolute;\n  bottom: 10%;\n  left: 8%;\n  font-size: 0.75em;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: ${PALETTE.DEFAULT_BLACK};\n  text-overflow: clip;\n  width: 50%;\n  white-space: nowrap;\n  overflow: hidden;\n  opacity: 80%;\n`;\n\nconst ExpirationDate = styled.div`\n  position: absolute;\n  bottom: 10%;\n  right: 10%;\n  font-size: 0.75em;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: ${PALETTE.DEFAULT_BLACK};\n  opacity: 80%;\n`;\n\nexport { Root, Chip, CardName, CardNumbersWrapper, CardNumbersFragment, OwnerName, ExpirationDate };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FRAGMENT_INDEX, DATE_TYPE } from '../../../constants/constants';\nimport SecureEllipseImage from '../../../assets/secure-ellipse.svg';\nimport * as Style from './style.js';\n\nconst Card = (props) => {\n  const { backgroundColor, width, height, size, cardNumbers, bankName, ownerName, expirationDate } = props;\n  const { FIRST, SECOND, THIRD, FOURTH } = FRAGMENT_INDEX;\n  const { MONTH, YEAR } = DATE_TYPE;\n\n  const showSecureDigits = (length) =>\n    Array.from({ length }, (_, idx) => <img key={idx} src={SecureEllipseImage} alt=\"secure-mark\" />);\n\n  return (\n    <Style.Root width={width} height={height} size={size} backgroundColor={backgroundColor}>\n      <Style.CardName>{bankName}</Style.CardName>\n      <Style.Chip />\n      <Style.CardNumbersWrapper>\n        <Style.CardNumbersFragment>{cardNumbers[FIRST]}</Style.CardNumbersFragment>\n        <Style.CardNumbersFragment>{cardNumbers[SECOND]}</Style.CardNumbersFragment>\n        <Style.CardNumbersFragment>{showSecureDigits(cardNumbers[THIRD].length)}</Style.CardNumbersFragment>\n        <Style.CardNumbersFragment>{showSecureDigits(cardNumbers[FOURTH].length)}</Style.CardNumbersFragment>\n      </Style.CardNumbersWrapper>\n      <Style.OwnerName>{`${ownerName || 'NAME'}`}</Style.OwnerName>\n      <Style.ExpirationDate>{`${expirationDate[MONTH] || 'MM'}/${expirationDate[YEAR] || 'YY'}`}</Style.ExpirationDate>\n    </Style.Root>\n  );\n};\n\nCard.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  cardNumbers: PropTypes.object.isRequired,\n  bankName: PropTypes.string.isRequired,\n  ownerName: PropTypes.string.isRequired,\n  expirationDate: PropTypes.object.isRequired,\n};\n\nCard.defaultProps = {\n  size: 'normal',\n};\n\nexport default Card;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.button`\n  position: relative;\n  width: 208px;\n  height: 130px;\n  background-color: ${PALETTE.ADD_CARD_GRAY};\n  border-color: transparent;\n  border-radius: 5px;\n  font-size: 30px;\n  cursor: pointer;\n  color: ${PALETTE.BOLD_BLACK};\n`;\n\nexport { Root };\n","import React from 'react';\nimport * as Styled from './style';\n\nconst CardAddButton = () => {\n  return <Styled.Root>+</Styled.Root>;\n};\n\nexport default CardAddButton;\n","import PALETTE from './styles/palette';\n\nconst dummyCards = [\n  {\n    key: '1',\n    color: PALETTE.COLLIN_ORANGE,\n    width: '208px',\n    height: '130px',\n    bank: '포코 카드',\n    owner: 'POCO',\n    numbers: ['1111', '2222', '3333', '4444'],\n    expirationDate: '04/21',\n    alias: '엄카',\n  },\n  {\n    key: '2',\n    color: PALETTE.SUN_YELLOW,\n    width: '208px',\n    height: '130px',\n    bank: '로이드 카드',\n    owner: 'LOYD',\n    numbers: ['4444', '3333', '2222', '1111'],\n    expirationDate: '02/17',\n    alias: '법카',\n  },\n];\n\nconst dummyBanks = [\n  {\n    id: '1',\n    color: PALETTE.POCO_RED,\n    name: '포코 카드',\n  },\n  {\n    id: '2',\n    color: PALETTE.JUN_BLUE,\n    name: '준 카드',\n  },\n  {\n    id: '3',\n    color: PALETTE.PARK_GREEN,\n    name: '공원 카드',\n  },\n  {\n    id: '4',\n    color: PALETTE.BRAN_PINK,\n    name: '브랜 카드',\n  },\n  {\n    id: '5',\n    color: PALETTE.LOYD_MINT,\n    name: '로이드 카드',\n  },\n  {\n    id: '6',\n    color: PALETTE.DOBY_PINK,\n    name: '도비 카드',\n  },\n  {\n    id: '7',\n    color: PALETTE.COLLIN_ORANGE,\n    name: '콜린 카드',\n  },\n  {\n    id: '8',\n    color: PALETTE.SUN_YELLOW,\n    name: '썬 카드',\n  },\n];\n\nexport { dummyCards, dummyBanks };\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px 0px;\n`;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  &: not(: last-child) {\n    margin-bottom: 26px;\n  }\n`;\n\nconst CardAlias = styled.div`\n  margin-top: 5px;\n  font-size: 14px;\n  color: ${PALETTE.BOLD_BLACK}\n  height: 26px;\n`;\n\nexport { Root, CardWrapper, CardAlias };\n","import React from 'react';\nimport Card from '../../shared/Card';\nimport CardAddButton from '../../units/CardAddButton';\nimport { dummyCards } from '../../../mockData.js';\nimport * as Style from './style';\n\nconst CardList = (props) => {\n  return (\n    <Style.Root>\n      {dummyCards.map((card) => (\n        <Style.CardWrapper key={card.key}>\n          <Card\n            backgroundColor={card.color}\n            width=\"208px\"\n            height=\"130px\"\n            cardNumbers={card.numbers}\n            expirationDate={card.expirationDate}\n            ownerName={card.owner}\n          />\n          <Style.CardAlias>{card.alias}</Style.CardAlias>\n        </Style.CardWrapper>\n      ))}\n      <CardAddButton>+</CardAddButton>\n    </Style.Root>\n  );\n};\n\nexport default CardList;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.button`\n  width: 60px;\n  height: 34px;\n  position: absolute;\n  bottom: 16px;\n  right: 25px;\n  background-color: transparent;\n  border-color: transparent;\n  font-size: 14px;\n  font-weight: 700;\n  color: ${PALETTE.DEFAULT_CYAN};\n  text-align: right;\n  cursor: pointer;\n`;\n\nexport { Root };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Style from './style';\n\nconst Button = (props) => {\n  const { text, formId } = props;\n\n  return (\n    <Style.Root type=\"submit\" form={formId}>\n      {text}\n    </Style.Root>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  formId: PropTypes.string,\n};\n\nexport default Button;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  &: not(: last-child) {\n    margin-bottom: 19px;\n  }\n`;\n\nconst InputHeader = styled.div`\n  display: flex;\n  position: relative;\n  width: ${({ width }) => width};\n`;\n\nconst DefaultInputWrapper = styled.fieldset`\n  display: inline-flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  height: 45px;\n  background-color: ${PALETTE.INPUT_BG_GRAY};\n  border-color: transparent;\n  border-radius: 7px;\n  padding: 2px 8px;\n`;\n\nconst DefaultInput = styled.input`\n  width: ${({ width }) => width};\n  font-size: 1rem;\n  color: ${PALETTE.DEFAULT_CYAN};\n  border-color: transparent;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 12px;\n  margin-bottom: 3px;\n  color: ${PALETTE.INPUT_LABEL_BLACK};\n`;\n\nconst WordCount = styled.span`\n  position: absolute;\n  right: 0;\n  font-size: 12px;\n  color: ${PALETTE.INPUT_LABEL_BLACK};\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport { Root, InputHeader, DefaultInputWrapper, DefaultInput, Label, WordCount, FlexContainer };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { INPUT_TYPE } from '../../../constants/constants';\nimport * as Style from './style';\n\nconst RegisterInputWrapper = (props) => {\n  const { type, label, width, currentNameLength, children } = props;\n\n  const isOwnerName = type === INPUT_TYPE.OWNER_NAME.type;\n  const wordCount = <Style.WordCount>{`${currentNameLength}/30`}</Style.WordCount>;\n\n  return (\n    <Style.Root>\n      <Style.InputHeader width={width}>\n        <Style.Label htmlFor={type}>{label}</Style.Label>\n        {isOwnerName && wordCount}\n      </Style.InputHeader>\n      <Style.FlexContainer>{children}</Style.FlexContainer>\n    </Style.Root>\n  );\n};\n\nRegisterInputWrapper.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  currentNameLength: PropTypes.number,\n  children: PropTypes.node.isRequired,\n};\n\nexport default RegisterInputWrapper;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\nimport { DefaultInputWrapper, DefaultInput } from '../../shared/RegisterInputWrapper/style';\n\nconst InputWrapper = styled(DefaultInputWrapper)`\n  width: 318px;\n`;\n\nconst NumberInput = styled(DefaultInput)`\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  text-align: center;\n`;\n\nconst PasswordInput = styled(DefaultInput)`\n  font: small-caption;\n  font-size: 1rem;\n  text-align: center;\n  letter-spacing: 2px;\n`;\n\nconst Divider = styled.span`\n  font-size: 18px;\n  color: ${PALETTE.DEFAULT_CYAN};\n  margin: 0 4px;\n`;\n\nexport { InputWrapper, NumberInput, PasswordInput, Divider };\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport RegisterInputWrapper from '../../shared/RegisterInputWrapper';\nimport { FRAGMENT_INDEX } from '../../../constants/constants';\nimport * as Style from './style';\n\nconst CardNumbersInput = (props) => {\n  const { type, label, width, cardNumbers, setCardNumbers } = props;\n  const { FIRST, SECOND, THIRD, FOURTH } = FRAGMENT_INDEX;\n\n  const firstInput = useRef(null);\n  const secondInput = useRef(null);\n  const thirdInput = useRef(null);\n  const fourthInput = useRef(null);\n  const inputRefs = [firstInput, secondInput, thirdInput, fourthInput];\n\n  const isFourDigits = (value) => value.length === 4;\n\n  const handleChangeNumbers = (event) => {\n    const index = Number(event.target.dataset.numberIdx);\n    const numberFragment = event.target.value;\n\n    setCardNumbers((prevNumbers) => ({ ...prevNumbers, [index]: numberFragment }));\n\n    // TODO: selector open 시 input에서 일시적으로 focus out\n    if (isFourDigits(numberFragment)) {\n      index <= THIRD ? moveFocusToNextFragment(index) : focusOut(index - 1);\n    }\n  };\n\n  const moveFocusToNextFragment = (index) => {\n    inputRefs[index].current.focus();\n  };\n\n  const focusOut = (index) => {\n    inputRefs[index].current.blur();\n  };\n\n  return (\n    <RegisterInputWrapper type={type} label={label} width={width}>\n      <Style.InputWrapper>\n        <Style.NumberInput\n          type=\"number\"\n          aria-label=\"card-numbers-input-1\"\n          width=\"54px\"\n          min=\"1000\"\n          max=\"9999\"\n          value={cardNumbers[FIRST]}\n          data-number-idx={FIRST}\n          onChange={handleChangeNumbers}\n          ref={firstInput}\n          required\n        />\n        <Style.Divider>-</Style.Divider>\n        <Style.NumberInput\n          type=\"number\"\n          aria-label=\"card-numbers-input-2\"\n          width=\"54px\"\n          min=\"1000\"\n          max=\"9999\"\n          value={cardNumbers[SECOND]}\n          data-number-idx={SECOND}\n          onChange={handleChangeNumbers}\n          ref={secondInput}\n          required\n        />\n        <Style.Divider>-</Style.Divider>\n        <Style.PasswordInput\n          type=\"password\"\n          aria-label=\"card-numbers-input-3\"\n          width=\"54px\"\n          min=\"1000\"\n          max=\"9999\"\n          value={cardNumbers[THIRD]}\n          data-number-idx={THIRD}\n          onChange={handleChangeNumbers}\n          ref={thirdInput}\n          required\n        />\n        <Style.Divider>-</Style.Divider>\n        <Style.PasswordInput\n          type=\"password\"\n          aria-label=\"card-numbers-input-4\"\n          width=\"54px\"\n          min=\"1000\"\n          max=\"9999\"\n          value={cardNumbers[FOURTH]}\n          data-number-idx={FOURTH}\n          onChange={handleChangeNumbers}\n          ref={fourthInput}\n          required\n        />\n      </Style.InputWrapper>\n    </RegisterInputWrapper>\n  );\n};\n\nCardNumbersInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  cardNumbers: PropTypes.object.isRequired,\n  setCardNumbers: PropTypes.func.isRequired,\n};\n\nexport default CardNumbersInput;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\nimport { DefaultInputWrapper, DefaultInput } from '../../shared/RegisterInputWrapper/style';\n\nconst InputWrapper = styled(DefaultInputWrapper)`\n  width: 137px;\n`;\n\nconst Input = styled(DefaultInput)`\n  text-align: center;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\n\nconst Divider = styled.span`\n  font-size: 18px;\n  color: ${PALETTE.DEFAULT_CYAN};\n  margin: 0 4px;\n`;\n\nexport { InputWrapper, Input, Divider };\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport RegisterInputWrapper from '../../shared/RegisterInputWrapper';\nimport { DATE_TYPE } from '../../../constants/constants';\nimport * as Style from './style';\n\nconst ExpirationDateInput = (props) => {\n  const { type, label, width, expirationDate, setExpirationDate } = props;\n\n  const monthInput = useRef(null);\n  const yearInput = useRef(null);\n\n  const isValidMonth = (value) => 1 <= value && value <= 12;\n  const isValidYear = (value) => 21 <= value && value < 30;\n\n  const underTwoDigits = (value) => value.length < 2;\n  const overTwoDigits = (value) => value.length > 2;\n\n  // TODO: 분기 처리 개선\n  const handleChangeDate = (event) => {\n    const dateType = event.target.dataset.dateType;\n    const value = event.target.value;\n\n    if (underTwoDigits(value)) {\n      setExpirationDate((prevDate) => ({ ...prevDate, [dateType]: value }));\n\n      return;\n    }\n\n    if (dateType === DATE_TYPE.MONTH) {\n      if (!isValidMonth(value)) return;\n\n      moveFocusToYearInput();\n    } else {\n      if (!isValidYear(value)) return;\n    }\n\n    if (overTwoDigits(value)) return;\n\n    setExpirationDate((prevDate) => ({ ...prevDate, [dateType]: value }));\n  };\n\n  const moveFocusToYearInput = () => {\n    yearInput.current.focus();\n  };\n\n  return (\n    <RegisterInputWrapper type={type} label={label} width={width}>\n      <Style.InputWrapper>\n        <Style.Input\n          type=\"number\"\n          aria-label=\"expiration-date-input-month\"\n          width=\"44px\"\n          placeholder=\"MM\"\n          value={expirationDate[DATE_TYPE.MONTH]}\n          data-date-type={DATE_TYPE.MONTH}\n          onChange={handleChangeDate}\n          ref={monthInput}\n          required\n        />\n        <Style.Divider>/</Style.Divider>\n        <Style.Input\n          type=\"number\"\n          aria-label=\"expiration-date-input-year\"\n          width=\"44px\"\n          placeholder=\"YY\"\n          value={expirationDate[DATE_TYPE.YEAR]}\n          data-date-type={DATE_TYPE.YEAR}\n          onChange={handleChangeDate}\n          ref={yearInput}\n          required\n        />\n      </Style.InputWrapper>\n    </RegisterInputWrapper>\n  );\n};\n\nExpirationDateInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  expirationDate: PropTypes.object.isRequired,\n  setExpirationDate: PropTypes.func.isRequired,\n};\n\nexport default ExpirationDateInput;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\nimport { DefaultInputWrapper, DefaultInput } from '../../shared/RegisterInputWrapper/style';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputWrapper = styled(DefaultInputWrapper)`\n  width: 318px;\n  border: ${({ isValid }) => (isValid ? 'none' : '1px solid red')};\n`;\n\nconst Input = styled(DefaultInput)`\n  &::-webkit-input-placeholder {\n    font-size: 16px;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  display: ${({ isValid }) => (isValid ? 'none' : 'inline')};\n  transform: translateY(-16px);\n  font-size: 0.25rem;\n  color: red;\n`;\n\nconst Divider = styled.span`\n  font-size: 18px;\n  color: ${PALETTE.DEFAULT_CYAN};\n  margin: 0 4px;\n`;\n\nexport { Root, InputWrapper, Input, ErrorMessage, Divider };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RegisterInputWrapper from '../../shared/RegisterInputWrapper';\nimport * as Style from './style';\n\nconst OwnerNameInput = (props) => {\n  const { type, label, width, ownerName, setOwnerName } = props;\n  const [isInputValid, setInputValid] = useState(true);\n\n  const isEnglish = (char) => !/[^A-Za-z\\s]/g.test(char);\n\n  const isValidLength = (value) => value.length <= 30;\n\n  const handleChangeName = (event) => {\n    const currentValue = event.target.value;\n\n    if (!isEnglish(currentValue)) {\n      setInputValid(false);\n\n      return;\n    }\n    if (!isValidLength(currentValue)) return;\n\n    setInputValid(true);\n    setOwnerName(currentValue.toUpperCase());\n  };\n\n  return (\n    <Style.Root>\n      <RegisterInputWrapper type={type} label={label} width={width} currentNameLength={ownerName.length}>\n        <Style.InputWrapper isValid={isInputValid}>\n          <Style.Input\n            width=\"302px\"\n            aria-label=\"owner-name-input\"\n            placeholder={'카드에 표시된 이름과 동일하게 입력하세요.'}\n            value={ownerName}\n            onChange={handleChangeName}\n          />\n        </Style.InputWrapper>\n      </RegisterInputWrapper>\n      <Style.ErrorMessage isValid={isInputValid}>이름은 영어로만 입력해주세요</Style.ErrorMessage>\n    </Style.Root>\n  );\n};\n\nOwnerNameInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  ownerName: PropTypes.string.isRequired,\n  setOwnerName: PropTypes.func.isRequired,\n};\n\nexport default OwnerNameInput;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-width: 375px;\n  background-color: ${PALETTE.COLOR_SELECTOR_WHITE};\n\n  display: grid;\n  grid-template-rows: repeat(4, 1fr);\n  grid-template-columns: repeat(4, 1fr);\n\n  border-color: transparent;\n  height: 227px;\n`;\n\nconst Keypad = styled.button`\n  font-size: 1.25rem;\n  border: 1px solid ${PALETTE.DEFAULT_CYAN};\n  border-radius: 4px;\n  background-color: transparent;\n\n  &:nth-child(13) {\n    grid-column: 1 / span 2;\n  }\n  &:nth-child(14) {\n    grid-column: 3 / span 2;\n  }\n\n  &:active {\n    background: ${PALETTE.DEFAULT_CYAN};\n  }\n`;\n\nexport { Root, Keypad };\n","import React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport shuffle from '../../../utils/utils';\nimport * as Style from './style';\n\nexport const KeyboardPortal = ({ children }) => {\n  const el = document.getElementById('keyboard');\n  return createPortal(children, el);\n};\n\nconst VirtualKeyboard = (props) => {\n  const { setInputNumbers } = props;\n\n  const originNumbers = [...Array.from({ length: 10 }, (_, idx) => idx), null, null];\n  const [keypadNumbers, setKeypadNumbers] = useState(originNumbers);\n\n  const onClickKeypad = (event) => {\n    const number = event.target.dataset.number;\n    if (!number) return;\n\n    setInputNumbers((inputNumbers) => inputNumbers.concat(number));\n    setKeypadNumbers(shuffle(keypadNumbers));\n  };\n\n  const onDeleteKeypad = () => {\n    setInputNumbers((inputNumbers) => inputNumbers.slice(0, inputNumbers.length - 1));\n  };\n\n  const keypads = keypadNumbers.map((num, idx) => (\n    <Style.Keypad className=\"keypad-number\" key={num || idx * -1} data-number={num} onClick={onClickKeypad}>\n      {num}\n    </Style.Keypad>\n  ));\n\n  useEffect(() => {\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n\n  return (\n    <Style.Root className=\"keyboard-inner\">\n      {keypads}\n      <Style.Keypad></Style.Keypad>\n      <Style.Keypad onClick={onDeleteKeypad}>DELETE</Style.Keypad>\n    </Style.Root>\n  );\n};\n\nVirtualKeyboard.propTypes = {\n  setInputNumbers: PropTypes.func.isRequired,\n};\n\nexport default VirtualKeyboard;\n","export default function shuffle(arr) {\n  let j, x, i;\n  for (i = arr.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = arr[i];\n    arr[i] = arr[j];\n    arr[j] = x;\n  }\n  return [...arr];\n}\n","export default __webpack_public_path__ + \"static/media/cvc-help.7e7d3191.svg\";","export default __webpack_public_path__ + \"static/media/cvc_guide.65857a27.png\";","import styled from 'styled-components/macro';\nimport { DefaultInputWrapper, DefaultInput } from '../../shared/RegisterInputWrapper/style';\n\nconst InputWrapper = styled(DefaultInputWrapper)`\n  width: 84px;\n`;\n\nconst PasswordInput = styled(DefaultInput)`\n  width: 56px;\n  font: small-caption;\n  font-size: 1rem;\n  letter-spacing: 2px;\n  text-align: center;\n`;\n\nconst HelpMark = styled.img`\n  position: absolute;\n  right: -35px;\n  cursor: pointer;\n`;\n\nconst CVCImg = styled.img`\n  width: 60px;\n  position: absolute;\n  right: -100px;\n`;\n\nexport { InputWrapper, PasswordInput, HelpMark, CVCImg };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RegisterInputWrapper from '../../shared/RegisterInputWrapper';\nimport VirtualKeyboard, { KeyboardPortal } from '../../units/VirtualKeyboard';\nimport helpSvg from '../../../assets/cvc-help.svg';\nimport CVCGuideImg from '../../../assets/cvc_guide.png';\nimport * as Style from './style';\n\nconst SecureCodeInput = (props) => {\n  const { type, label, width, secureCode, setSecureCode } = props;\n  const [isCVCGuideOpen, setCVCGuideOpen] = useState(false);\n  const [isVirtualKeyboardOpened, setVirtualKeyboardOpened] = useState(false);\n\n  const isOverLength = (value) => value.length > 3;\n\n  const handleChangeNumbers = (event) => {\n    const currentValue = event.target.value;\n    if (isNaN(currentValue)) return;\n    if (isOverLength(currentValue)) {\n      setVirtualKeyboardOpened(false);\n      return;\n    }\n\n    setSecureCode(currentValue);\n  };\n\n  useEffect(() => {\n    if (secureCode.length === 3) {\n      setVirtualKeyboardOpened(false);\n    }\n  }, [secureCode]);\n\n  return (\n    <>\n      <RegisterInputWrapper type={type} label={label} width={width}>\n        <Style.InputWrapper>\n          <Style.PasswordInput\n            type=\"password\"\n            aria-label=\"secure-code-input\"\n            value={secureCode}\n            onChange={handleChangeNumbers}\n            onFocus={() => setVirtualKeyboardOpened(true)}\n            required\n          />\n          <Style.HelpMark\n            src={helpSvg}\n            onMouseOver={() => setCVCGuideOpen(true)}\n            onMouseLeave={() => setCVCGuideOpen(false)}\n          />\n          {isCVCGuideOpen && <Style.CVCImg src={CVCGuideImg} />}\n        </Style.InputWrapper>\n        <KeyboardPortal>\n          {isVirtualKeyboardOpened && <VirtualKeyboard inputNumbers={secureCode} setInputNumbers={setSecureCode} />}\n        </KeyboardPortal>\n      </RegisterInputWrapper>\n    </>\n  );\n};\n\nSecureCodeInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  secureCode: PropTypes.string.isRequired,\n  setSecureCode: PropTypes.func.isRequired,\n};\n\nexport default SecureCodeInput;\n","export default __webpack_public_path__ + \"static/media/secure-ellipse-cyan.d63eaa38.svg\";","import styled from 'styled-components/macro';\nimport { DefaultInputWrapper, DefaultInput } from '../../shared/RegisterInputWrapper/style';\n\nconst InputWrapper = styled(DefaultInputWrapper)`\n  width: 43px;\n  &: first-child {\n    margin-right: 7px;\n  }\n`;\n\nconst PasswordInput = styled(DefaultInput)`\n  width: 22px;\n  text-align: center;\n  font: small-caption;\n  letter-spacing: 2px;\n`;\n\nconst PasswordMark = styled.div`\n  width: 43px;\n  height: auto;\n  margin-left: 7px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport { PasswordInput, InputWrapper, PasswordMark };\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport RegisterInputWrapper from '../../shared/RegisterInputWrapper';\nimport VirtualKeyboard, { KeyboardPortal } from '../../units/VirtualKeyboard';\nimport { FRAGMENT_INDEX } from '../../../constants/constants';\nimport EllipseSvg from '../../../assets/secure-ellipse-cyan.svg';\nimport * as Style from './style';\n\nconst CardPasswordInput = (props) => {\n  const { type, label, cardPassword, setCardPassword } = props;\n  const { FIRST, SECOND } = FRAGMENT_INDEX;\n  const [isVirtualKeyboardOpened, setVirtualKeyboardOpened] = useState(false);\n\n  const secondInput = useRef(null);\n\n  const passwordMark = Array.from({ length: 2 }).map((_, idx) => (\n    <Style.PasswordMark key={idx}>\n      <img src={EllipseSvg} alt=\"password-mark\" />\n    </Style.PasswordMark>\n  ));\n\n  const handleChangeNumbers = (event) => {\n    const currentValue = event.target.value;\n    const index = Number(event.target.dataset.passwordIdx);\n\n    if (isNaN(currentValue)) return;\n\n    if (index === FIRST) {\n      moveFocusToNextFragment();\n    } else if (index === SECOND) {\n      if (currentValue.length > 1) return;\n    }\n\n    setCardPassword((prevPassword) => prevPassword.concat(currentValue));\n  };\n\n  const moveFocusToNextFragment = () => {\n    secondInput.current.focus();\n  };\n\n  useEffect(() => {\n    if (cardPassword.length === 2) {\n      setVirtualKeyboardOpened(false);\n    }\n  }, [cardPassword]);\n\n  return (\n    <>\n      <RegisterInputWrapper type={type} label={label} width={'100%'}>\n        <Style.InputWrapper>\n          <Style.PasswordInput\n            type=\"password\"\n            aria-label=\"password-input-1\"\n            value={cardPassword[0] || ''}\n            data-password-idx={FIRST}\n            onChange={handleChangeNumbers}\n            onFocus={() => setVirtualKeyboardOpened(true)}\n            required\n          />\n        </Style.InputWrapper>\n        <Style.InputWrapper>\n          <Style.PasswordInput\n            type=\"password\"\n            aria-label=\"password-input-2\"\n            value={cardPassword[1] || ''}\n            data-password-idx={SECOND}\n            onChange={handleChangeNumbers}\n            ref={secondInput}\n            required\n          />\n        </Style.InputWrapper>\n        {passwordMark}\n        <KeyboardPortal>\n          {isVirtualKeyboardOpened && <VirtualKeyboard inputNumbers={cardPassword} setInputNumbers={setCardPassword} />}\n        </KeyboardPortal>\n      </RegisterInputWrapper>\n    </>\n  );\n};\n\nCardPasswordInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  cardPassword: PropTypes.string.isRequired,\n  setCardPassword: PropTypes.func.isRequired,\n};\n\nexport default CardPasswordInput;\n","import styled from 'styled-components/macro';\n\nconst Root = styled.form`\n  margin-top: 25px;\n`;\n\nexport { Root };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardNumbersInput from '../../units/CardNumbersInput';\nimport ExpirationDateInput from '../../units/ExpirationDateInput';\nimport OwnerNameInput from '../../units/OwnerNameInput';\nimport SecureCodeInput from '../../units/SecureCodeInput';\nimport CardPasswordInput from '../../units/CardPasswordInput';\nimport { INPUT_TYPE } from '../../../constants/constants';\nimport * as Style from './style';\n\nconst CardRegisterForm = (props) => {\n  const { CARD_NUMBERS, EXPIRATION_DATE, OWNER_NAME, SECURE_CODE, PASSWORD } = INPUT_TYPE;\n  const {\n    cardNumbers,\n    expirationDate,\n    ownerName,\n    secureCode,\n    cardPassword,\n    setCardNumbers,\n    setExpirationDate,\n    setOwnerName,\n    setSecureCode,\n    setCardPassword,\n    onSubmitForm,\n  } = props;\n\n  return (\n    <Style.Root id=\"register-form\" onSubmit={onSubmitForm}>\n      <CardNumbersInput {...CARD_NUMBERS} cardNumbers={cardNumbers} setCardNumbers={setCardNumbers} />\n      <ExpirationDateInput {...EXPIRATION_DATE} expirationDate={expirationDate} setExpirationDate={setExpirationDate} />\n      <OwnerNameInput {...OWNER_NAME} ownerName={ownerName} setOwnerName={setOwnerName} />\n      <SecureCodeInput {...SECURE_CODE} secureCode={secureCode} setSecureCode={setSecureCode} />\n      <CardPasswordInput {...PASSWORD} cardPassword={cardPassword} setCardPassword={setCardPassword} />\n    </Style.Root>\n  );\n};\n\nCardRegisterForm.propTypes = {\n  cardNumbers: PropTypes.object.isRequired,\n  expirationDate: PropTypes.object.isRequired,\n  ownerName: PropTypes.string.isRequired,\n  secureCode: PropTypes.string.isRequired,\n  cardPassword: PropTypes.string.isRequired,\n  setCardNumbers: PropTypes.func.isRequired,\n  setExpirationDate: PropTypes.func.isRequired,\n  setOwnerName: PropTypes.func.isRequired,\n  setSecureCode: PropTypes.func.isRequired,\n  setCardPassword: PropTypes.func.isRequired,\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default CardRegisterForm;\n","import styled, { keyframes } from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst slideup = keyframes`\n  from {\n    height: 0px;\n  }\n\n  to {\n    height: 227px;\n  }\n`;\n\nconst SelectorInner = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: grid;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(4, 1fr);\n  width: 100%;\n  height: 227px;\n  padding: 34px 45px 41px 45px;\n  background-color: ${PALETTE.COLOR_SELECTOR_WHITE};\n  border-radius: 5px 5px 0px 0px;\n  animation: ${slideup} 0.5s ease;\n`;\n\nexport { Root, SelectorInner };\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Circle = styled.button`\n  width: 37px;\n  height: 37px;\n  background-color: ${({ color }) => color};\n  border-radius: 50%;\n  border-color: transparent;\n  margin-bottom: 10px;\n  cursor: pointer;\n`;\n\nconst BankName = styled.span`\n  font-size: 12px;\n  text-align: center;\n  color: ${PALETTE.INPUT_LABEL_BLACK};\n`;\n\nexport { Root, Circle, BankName };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Style from './style';\n\nconst CardColorOption = (props) => {\n  const { onClickOption, bankId } = props;\n\n  return (\n    <Style.Root>\n      <Style.Circle color={props.color} data-bank-id={bankId} onClick={onClickOption} />\n      <Style.BankName>{props.bankName}</Style.BankName>\n    </Style.Root>\n  );\n};\n\nCardColorOption.propTypes = {\n  onClickOption: PropTypes.func.isRequired,\n  bankId: PropTypes.string.isRequired,\n};\n\nexport default CardColorOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Style from './style';\nimport CardColorOption from '../CardColorOption';\nimport { dummyBanks } from '../../../mockData';\n\nconst CardSelector = (props) => {\n  const { setBankId, setSelectorOpened } = props;\n\n  const handleSelectColor = (event) => {\n    setBankId(event.target.dataset.bankId);\n    setSelectorOpened(false);\n  };\n\n  return (\n    <Style.Root>\n      <Style.SelectorInner>\n        {dummyBanks.map((bank) => (\n          <CardColorOption\n            key={bank.id}\n            bankId={bank.id}\n            color={bank.color}\n            bankName={bank.name}\n            onClickOption={handleSelectColor}\n          />\n        ))}\n      </Style.SelectorInner>\n    </Style.Root>\n  );\n};\n\nexport default CardSelector;\n\nCardSelector.propTypes = {\n  setBankId: PropTypes.func.isRequired,\n  setSelectorOpened: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components/macro';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 28px;\n`;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport { Root, CardWrapper };\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../../shared/Card';\nimport Button from '../../shared/Button';\nimport CardRegisterForm from '../../units/CardRegisterForm';\nimport CardSelector from '../../units/CardSelector';\nimport PALETTE from '../../../styles/palette';\nimport { dummyBanks } from '../../../mockData';\nimport { FRAGMENT_INDEX, DATE_TYPE } from '../../../constants/constants';\nimport * as Style from './style';\n\nconst CardRegister = (props) => {\n  const { setCardData, handleGoNext } = props;\n  const { FIRST, SECOND, THIRD, FOURTH } = FRAGMENT_INDEX;\n  const { MONTH, YEAR } = DATE_TYPE;\n\n  const [isSelectorOpened, setSelectorOpened] = useState(false);\n  const [cardColor, setCardColor] = useState(PALETTE.EMPTY_CARD_GRAY);\n  const [cardNumbers, setCardNumbers] = useState({ [FIRST]: '', [SECOND]: '', [THIRD]: '', [FOURTH]: '' });\n  const [bankId, setBankId] = useState('');\n  const [expirationDate, setExpirationDate] = useState({ [MONTH]: '', [YEAR]: '' });\n  const [ownerName, setOwnerName] = useState('');\n  const [secureCode, setSecureCode] = useState('');\n  const [cardPassword, setCardPassword] = useState('');\n\n  const isCardIdentified =\n    Object.values(cardNumbers)\n      .slice(0, 2)\n      .every((fragment) => fragment.length === 4) && !bankId;\n\n  useEffect(() => {\n    if (isCardIdentified) {\n      setSelectorOpened(true);\n    }\n  }, [isCardIdentified]);\n\n  useEffect(() => {\n    setCardColor(dummyBanks.find(({ id }) => id === bankId)?.color || PALETTE.EMPTY_CARD_GRAY);\n  }, [bankId]);\n\n  const bankName = dummyBanks.find(({ id }) => id === bankId)?.name || '';\n\n  const handleCompleteRegister = (event) => {\n    event.preventDefault();\n\n    setCardData({ bankId, cardNumbers, expirationDate, ownerName, secureCode, cardPassword });\n    handleGoNext();\n  };\n\n  return (\n    <>\n      <Style.Root>\n        <Style.CardWrapper>\n          <Card\n            width=\"213px\"\n            height=\"133px\"\n            backgroundColor={cardColor}\n            ownerName={ownerName}\n            bankName={bankName}\n            cardNumbers={cardNumbers}\n            expirationDate={expirationDate}\n          />\n        </Style.CardWrapper>\n        <CardRegisterForm\n          cardNumbers={cardNumbers}\n          expirationDate={expirationDate}\n          ownerName={ownerName}\n          secureCode={secureCode}\n          cardPassword={cardPassword}\n          setCardNumbers={setCardNumbers}\n          setExpirationDate={setExpirationDate}\n          setOwnerName={setOwnerName}\n          setSecureCode={setSecureCode}\n          setCardPassword={setCardPassword}\n          onSubmitForm={handleCompleteRegister}\n        />\n        <Button text={'다음'} formId=\"register-form\" />\n      </Style.Root>\n      {isSelectorOpened && <CardSelector setBankId={setBankId} setSelectorOpened={setSelectorOpened} />}\n    </>\n  );\n};\n\nCardRegister.propTypes = {\n  setCardData: PropTypes.func.isRequired,\n  handleGoNext: PropTypes.func.isRequired,\n};\n\nexport default CardRegister;\n","import styled from 'styled-components/macro';\nimport PALETTE from '../../../styles/palette';\n\nconst Root = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h3`\n  margin-top: 130px;\n  margin-bottom: 0;\n  font-size: 24px;\n  font-weight: 400;\n`;\n\nconst CardWrapper = styled.div`\n  margin-top: 77px;\n`;\n\nconst AliasInput = styled.input`\n  width: 242px;\n  margin-top: 33px;\n  padding-bottom: 2px;\n  border: none;\n  border-bottom: 1.5px solid ${PALETTE.INPUT_TEXT_GRAY};\n  font-size: 18px;\n  text-align: center;\n\n  &: focus {\n    outline: none;\n    border-bottom: 1.5px solid ${PALETTE.DEFAULT_CYAN};\n  }\n`;\n\nexport { Root, Title, CardWrapper, AliasInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../../shared/Card';\nimport Button from '../../shared/Button';\nimport { dummyBanks } from '../../../mockData';\nimport * as Style from './style';\n\nconst CardCompletion = (props) => {\n  const {\n    cardData: { bankId, cardNumbers, expirationDate, ownerName },\n  } = props;\n\n  const { color: cardColor, name: bankName } = dummyBanks.find(({ id }) => id === bankId);\n\n  return (\n    <Style.Root>\n      <Style.Title>카드등록이 완료되었습니다.</Style.Title>\n      <Style.CardWrapper>\n        <Card\n          width=\"293px\"\n          height=\"183px\"\n          size=\"large\"\n          backgroundColor={cardColor}\n          ownerName={ownerName}\n          bankName={bankName}\n          cardNumbers={cardNumbers}\n          expirationDate={expirationDate}\n        />\n      </Style.CardWrapper>\n      <Style.AliasInput aria-label=\"card-alias-input\" />\n      <Button text={'확인'} />\n    </Style.Root>\n  );\n};\n\nCardCompletion.propTypes = {\n  cardData: PropTypes.shape({\n    bankId: PropTypes.string.isRequired,\n    cardNumbers: PropTypes.object.isRequired,\n    expirationDate: PropTypes.object.isRequired,\n    ownerName: PropTypes.string.isRequired,\n  }),\n};\n\nexport default CardCompletion;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n  \n  body * {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { useState } from 'react';\nimport PageHost from './components/PageHost';\nimport CardList from './components/pages/CardList';\nimport CardRegister from './components/pages/CardRegister';\nimport CardCompletion from './components/pages/CardCompletion';\nimport GlobalStyle from './styles/global';\n\nconst PAGES = {\n  LIST: {\n    title: '보유카드',\n    content: (props) => <CardList {...props} />,\n    backButton: false,\n  },\n  REGISTER: {\n    title: '카드추가',\n    content: (props) => <CardRegister {...props} />,\n    backButton: true,\n  },\n  COMPLETION: {\n    title: '',\n    content: (props) => <CardCompletion {...props} />,\n    backButton: false,\n  },\n};\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState(PAGES.REGISTER);\n  const [cardData, setCardData] = useState({});\n\n  const handleGoNext = () => {\n    if (currentPage === PAGES.REGISTER) {\n      setCurrentPage(PAGES.COMPLETION);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <PageHost navigationTitle={currentPage.title} hasBackButton={currentPage.backButton}>\n        {currentPage.content({ handleGoNext, cardData, setCardData })}\n      </PageHost>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}